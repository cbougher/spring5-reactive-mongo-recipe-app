buildscript {
	ext {
		springBootVersion = '2.6.4'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//compile 'org.springframework.boot:spring-boot-starter-webflux'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.webjars:bootstrap:3.3.7-1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
}

//export test coverage
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}